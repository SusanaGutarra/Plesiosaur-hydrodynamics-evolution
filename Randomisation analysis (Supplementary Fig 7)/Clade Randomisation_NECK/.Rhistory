tbl <- lapply(samp, function (run) {
# assemble position
data.frame(Elasmosauridae = (run$elasmo$pos + 1) / 10000,
Polocotylidae  = (run$poli$pos + 1) / 10000,
Thalassophonea      = (run$thal$pos + 1) / 10000)
}) %>%
do.call(rbind, .)
# replace rownames with relevant test
rownames(tbl) <- c("Tree 13", "Tree 14",
"Tree 15", "Tree 16",
"Tree 17", "Tree 18")
# write table to csv file
write.csv(tbl, file = "randomisation_pval.csv")
# gather trees and rates into a list
data <- list(Tree1 = list(tree  = read.nexus("Sauropterygia.pca.scores.pruned.singletree.19.nex"),
rates = read.table("Sauropterygia.pca.scores.pruned.postproc.19.txt",
sep = "\t",
header = TRUE,
row.names = 1)),
Tree2 = list(tree  = read.nexus("Sauropterygia.pca.scores.pruned.singletree.20.nex"),
rates = read.table("Sauropterygia.pca.scores.pruned.postproc.20.txt",
sep = "\t",
header = TRUE,
row.names = 1)))
# remove first (blank) row of rates tables
# this is from the root branch
data <- lapply(data, function (run) {
# remove row from rates table
tbl <- run$rates[-1, ]
# return data
return(list(tree  = run$tree,
rates = tbl))
})
# Elasmosauridae
elasmo_tax <- c("Albertonectes_vanderveldei","Aristonectes_quiriquinensis",
"Callawayasaurus_colombiensis","Elasmosaurus_platyurus",
"Hydrotherosaurus_alexandrae","Kaiwhekea_katiki",
"Libonectes_atlasense","Morenosaurus_stocki",
"Styxosaurus_sp","Thalassomedon_haningtoni")
# Policotylidae
poli_tax <- c("Dolichorhynchops_osborni","Manemergus_anguirostris",
"Polycotylus_latipinnis","Trinacromerum_bentonianum")
# Thalassophonea
thal_tax <- c("Kronosaurus_boyacensis",
"Kronosaurus_queenslandicus","Liopleurodon_ferox",
"Luskhan_itilensis","Peloneustes_philarchus",
"Sachicasaurus_vitae")
# get relevant banches = rows in rates tables
data <- lapply(data, function (run) {
# get edge numbers and return data
return(c(run,
list(elasmo_edge = which.edge(run$tree, elasmo_tax),
poli_edge  = which.edge(run$tree, poli_tax),
thal_edge  = which.edge(run$tree, thal_tax))))
})
samp_mean <- function (size, data) {
# Performs a randomisation test on a set of data including a clade which is
# a subset. Random samples the data without replacement to the size of the
# comparison clade. This can be incorported into the replicate funciton.
#
# Args:
#   size: the number of rows to include in the sample.
#   data:  a vector or column from a matrix of data.frame that includes the
#          original data; must be large than size. This is the data to be
#          sampled.
#
# Returns:
#   Means of the resampled data.
# get rows to sample or same size as clade
row_n <- sample(seq_along(data), size, replace = FALSE)
# calculate difference in means within and without tha sample rows
diff_mean <- mean(data[row_n]) - mean(data[-row_n])
}
# randomly sample data and compare to each clade
samp <- lapply(data, function (run) {
# calculate mean of clades
mean_rates <- list(elasmo = mean(run$rates[run$elasmo_edge, "Mean.Scalar"]) -
mean(run$rates[-run$elasmo_edge, "Mean.Scalar"]),
poli  = mean(run$rates[run$poli_edge, "Mean.Scalar"]) -
mean(run$rates[-run$poli_edge, "Mean.Scalar"]),
thal  = mean(run$rates[run$thal_edge, "Mean.Scalar"]) -
mean(run$rates[-run$thal_edge, "Mean.Scalar"]))
# replicate samples
reps <- list(elasmo = replicate(9999, samp_mean(length(run$elasmo_edge),
run$rates$Mean.Scalar)),
poli  = replicate(9999, samp_mean(length(run$poli_edge),
run$rates$Mean.Scalar)),
thal  = replicate(9999, samp_mean(length(run$thal_edge),
run$rates$Mean.Scalar)))
# get differences in means
mn_pos <- list(elasmo = length(which(abs(reps$elasmo) > abs(mean_rates$elasmo))),
poli  = length(which(abs(reps$poli) > abs(mean_rates$poli))),
thal  = length(which(abs(reps$thal) > abs(mean_rates$thal))))
# return data
return(list(elasmo = list(emp  = mean_rates$elasmo,
rand = reps$elasmo,
pos  = mn_pos$elasmo),
poli  = list(emp  = mean_rates$poli,
rand = reps$poli,
pos  = mn_pos$poli),
thal  = list(emp  = mean_rates$thal,
rand = reps$thal,
pos  = mn_pos$thal)))
})
{
# plot histograms
cairo_pdf("randomisation_hist.pdf",
width  = 10,
height = 14) #original 14
# set up plot area
par(mfrow = c(6, 3),   #original 6, 3
mar   = c(2, 1, 1, 2),
oma   = c(4, 4, 5, 2))
# begin plotting
for (run in samp) {
# Elasmosauridae
hist(run$elasmo$rand, xlim = range(c(run$elasmo$rand, run$elasmo$emp)),
main = NULL)
abline(v = run$elasmo$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosauridae", 3, line = 1, font = 2)
# add axis label
mtext("Frequency", 2, line = 3)
# Policotylidae
hist(run$poli$rand, xlim = range(c(run$poli$rand, run$poli$emp)),
main = NULL)
abline(v = run$poli$emp, lwd = 2, col = "blue")
# plot column label
if (par()$fig[4] > 0.9) mtext("Policotylidae", 3, line = 1, font = 2)
# Thalassophonea
hist(run$thal$rand, xlim = range(c(run$thal$rand, run$thal$emp)),
main = NULL)
abline(v = run$thal$emp, lwd = 2, col = "green")
# plot column label
if (par()$fig[4] > 0.9) mtext("Thalassophonea", 3, line = 1, font = 2)
# add row label
labels <- c("Tree 19", "Tree 20")
nrun <- 6 - (par()$fig[3] * 6)
mtext(labels[nrun], 4, line = 2, font = 2)
}
# x axis title
mtext("Difference between sampled means", 1, outer = TRUE, line = 1)
# figure title
mtext("Randomisation tests for time scaling methods", 3,
outer = TRUE, cex = 1.5, font = 2, line = 3)
# stop plotting
dev.off()
}
# assemble table of p-values from randomisation tests
# these are number of random samples with great difference in mean + 1 to find
# position of empirical data / 10000 to give p-value
tbl <- lapply(samp, function (run) {
# assemble position
data.frame(Elasmosauridae = (run$elasmo$pos + 1) / 10000,
Polocotylidae  = (run$poli$pos + 1) / 10000,
Thalassophonea      = (run$thal$pos + 1) / 10000)
}) %>%
do.call(rbind, .)
# replace rownames with relevant test
rownames(tbl) <- c("Tree 19", "Tree 20")
# write table to csv file
write.csv(tbl, file = "randomisation_pval.csv")
# gather trees and rates into a list
data <- list(Tree1 = list(tree  = read.nexus("Sauropterygia.pca.scores.pruned.singletree.1.nex"),
rates = read.table("Sauropterygia.pca.scores.pruned.postproc.1.txt",
sep = "\t",
header = TRUE,
row.names = 1)),
Tree2 = list(tree  = read.nexus("Sauropterygia.pca.scores.pruned.singletree.2.nex"),
rates = read.table("Sauropterygia.pca.scores.pruned.postproc.2.txt",
sep = "\t",
header = TRUE,
row.names = 1)),
Tree3   = list(tree  = read.nexus("Sauropterygia.pca.scores.pruned.singletree.3.nex"),
rates = read.table("Sauropterygia.pca.scores.pruned.postproc.3.txt",
sep = "\t",
header = TRUE,
row.names = 1)),
Tree4   = list(tree  = read.nexus("Sauropterygia.pca.scores.pruned.singletree.4.nex"),
rates = read.table("Sauropterygia.pca.scores.pruned.postproc.4.txt",
sep = "\t",
header = TRUE,
row.names = 1)),
Tree5   = list(tree  = read.nexus("Sauropterygia.pca.scores.pruned.singletree.5.nex"),
rates = read.table("Sauropterygia.pca.scores.pruned.postproc.5.txt",
sep = "\t",
header = TRUE,
row.names = 1)),
Tree6   = list(tree  = read.nexus("Sauropterygia.pca.scores.pruned.singletree.6.nex"),
rates = read.table("Sauropterygia.pca.scores.pruned.postproc.6.txt",
sep = "\t",
header = TRUE,
row.names = 1)))
# remove first (blank) row of rates tables
# this is from the root branch
data <- lapply(data, function (run) {
# remove row from rates table
tbl <- run$rates[-1, ]
# return data
return(list(tree  = run$tree,
rates = tbl))
})
# Elasmosauridae
elasmo_tax <- c("Albertonectes_vanderveldei","Aristonectes_quiriquinensis",
"Callawayasaurus_colombiensis","Elasmosaurus_platyurus",
"Hydrotherosaurus_alexandrae","Kaiwhekea_katiki",
"Libonectes_atlasense","Morenosaurus_stocki",
"Styxosaurus_sp","Thalassomedon_haningtoni")
# Elasmosaurinae
elasmo2_tax <- c("Albertonectes_vanderveldei",
"Elasmosaurus_platyurus",
"Hydrotherosaurus_alexandrae",
"Styxosaurus_sp")
# Policotylidae
poli_tax <- c("Dolichorhynchops_osborni","Manemergus_anguirostris",
"Polycotylus_latipinnis","Trinacromerum_bentonianum")
# Thalassophonea
thal_tax <- c("Kronosaurus_boyacensis",
"Kronosaurus_queenslandicus","Liopleurodon_ferox",
"Luskhan_itilensis","Peloneustes_philarchus",
"Sachicasaurus_vitae")
# get relevant banches = rows in rates tables
data <- lapply(data, function (run) {
# get edge numbers and return data
return(c(run,
list(elasmo_edge = which.edge(run$tree, elasmo_tax),
elasmo2_edge = which.edge(run$tree, elasmo2_tax),
poli_edge  = which.edge(run$tree, poli_tax),
thal_edge  = which.edge(run$tree, thal_tax))))
})
samp_mean <- function (size, data) {
# Performs a randomisation test on a set of data including a clade which is
# a subset. Random samples the data without replacement to the size of the
# comparison clade. This can be incorported into the replicate funciton.
#
# Args:
#   size: the number of rows to include in the sample.
#   data:  a vector or column from a matrix of data.frame that includes the
#          original data; must be large than size. This is the data to be
#          sampled.
#
# Returns:
#   Means of the resampled data.
# get rows to sample or same size as clade
row_n <- sample(seq_along(data), size, replace = FALSE)
# calculate difference in means within and without tha sample rows
diff_mean <- mean(data[row_n]) - mean(data[-row_n])
}
# randomly sample data and compare to each clade
samp <- lapply(data, function (run) {
# calculate mean of clades
mean_rates <- list(elasmo = mean(run$rates[run$elasmo_edge, "Mean.Scalar"]) -
mean(run$rates[-run$elasmo_edge, "Mean.Scalar"]),
elasmo2 = mean(run$rates[run$elasmo2_edge, "Mean.Scalar"]) -
mean(run$rates[-run$elasmo2_edge, "Mean.Scalar"]),
poli  = mean(run$rates[run$poli_edge, "Mean.Scalar"]) -
mean(run$rates[-run$poli_edge, "Mean.Scalar"]),
thal  = mean(run$rates[run$thal_edge, "Mean.Scalar"]) -
mean(run$rates[-run$thal_edge, "Mean.Scalar"]))
# replicate samples
reps <- list(elasmo = replicate(9999, samp_mean(length(run$elasmo_edge),
run$rates$Mean.Scalar)),
elasmo2 = replicate(9999, samp_mean(length(run$elasmo2_edge),
run$rates$Mean.Scalar)),
poli  = replicate(9999, samp_mean(length(run$poli_edge),
run$rates$Mean.Scalar)),
thal  = replicate(9999, samp_mean(length(run$thal_edge),
run$rates$Mean.Scalar)))
# get differences in means
mn_pos <- list(elasmo = length(which(abs(reps$elasmo) > abs(mean_rates$elasmo))),
elasmo2 = length(which(abs(reps$elasmo2) > abs(mean_rates$elasmo2))),
poli  = length(which(abs(reps$poli) > abs(mean_rates$poli))),
thal  = length(which(abs(reps$thal) > abs(mean_rates$thal))))
# return data
return(list(elasmo = list(emp  = mean_rates$elasmo,
rand = reps$elasmo,
pos  = mn_pos$elasmo),
elasmo2 = list(emp  = mean_rates$elasmo2,
rand = reps$elasmo2,
pos  = mn_pos$elasmo2),
poli  = list(emp  = mean_rates$poli,
rand = reps$poli,
pos  = mn_pos$poli),
thal  = list(emp  = mean_rates$thal,
rand = reps$thal,
pos  = mn_pos$thal)))
})
{
# plot histograms
cairo_pdf("randomisation_hist.pdf",
width  = 10,
height = 14) #original 14
# set up plot area
par(mfrow = c(6, 3),   #original 6, 3
mar   = c(2, 1, 1, 2),
oma   = c(4, 4, 5, 2))
# begin plotting
for (run in samp) {
# Elasmosauridae
hist(run$elasmo$rand, xlim = range(c(run$elasmo$rand, run$elasmo$emp)),
main = NULL)
abline(v = run$elasmo$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosauridae", 3, line = 1, font = 2)
# add axis label
mtext("Frequency", 2, line = 3)
# Elasmosaurinae
hist(run$elasmo2$rand, xlim = range(c(run$elasmo2$rand, run$elasmo2$emp)),
main = NULL)
abline(v = run$elasmo2$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosaurinae", 3, line = 1, font = 2)
# Policotylidae
hist(run$poli$rand, xlim = range(c(run$poli$rand, run$poli$emp)),
main = NULL)
abline(v = run$poli$emp, lwd = 2, col = "blue")
# plot column label
if (par()$fig[4] > 0.9) mtext("Policotylidae", 3, line = 1, font = 2)
# Thalassophonea
hist(run$thal$rand, xlim = range(c(run$thal$rand, run$thal$emp)),
main = NULL)
abline(v = run$thal$emp, lwd = 2, col = "green")
# plot column label
if (par()$fig[4] > 0.9) mtext("Thalassophonea", 3, line = 1, font = 2)
# add row label
labels <- c("Tree 1", "Tree 2",
"Tree 3", "Tree 4",
"Tree 5", "Tree 6")
nrun <- 6 - (par()$fig[3] * 6)
mtext(labels[nrun], 4, line = 2, font = 2)
}
# x axis title
mtext("Difference between sampled means", 1, outer = TRUE, line = 1)
# figure title
mtext("Randomisation tests for time scaling methods", 3,
outer = TRUE, cex = 1.5, font = 2, line = 3)
# stop plotting
dev.off()
}
{
# plot histograms
cairo_pdf("randomisation_hist.pdf",
width  = 10,
height = 14) #original 14
# set up plot area
par(mfrow = c(6, 3),   #original 6, 3
mar   = c(2, 1, 1, 2),
oma   = c(4, 4, 5, 2))
# begin plotting
for (run in samp) {
# Elasmosauridae
hist(run$elasmo$rand, xlim = range(c(run$elasmo$rand, run$elasmo$emp)),
main = NULL)
abline(v = run$elasmo$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosauridae", 3, line = 1, font = 2)
# add axis label
mtext("Frequency", 2, line = 3)
# Elasmosaurinae
hist(run$elasmo2$rand, xlim = range(c(run$elasmo2$rand, run$elasmo2$emp)),
main = NULL)
abline(v = run$elasmo2$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosaurinae", 3, line = 1, font = 2)
# Policotylidae
hist(run$poli$rand, xlim = range(c(run$poli$rand, run$poli$emp)),
main = NULL)
abline(v = run$poli$emp, lwd = 2, col = "blue")
# plot column label
if (par()$fig[4] > 0.9) mtext("Policotylidae", 3, line = 1, font = 2)
# Thalassophonea
hist(run$thal$rand, xlim = range(c(run$thal$rand, run$thal$emp)),
main = NULL)
abline(v = run$thal$emp, lwd = 2, col = "green")
# plot column label
if (par()$fig[4] > 0.9) mtext("Thalassophonea", 3, line = 1, font = 2)
# add row label
labels <- c("Tree 1", "Tree 2",
"Tree 3", "Tree 4",
"Tree 5", "Tree 6")
nrun <- 6 - (par()$fig[3] * 6)
mtext(labels[nrun], 4, line = 2, font = 2)
}
# x axis title
mtext("Difference between sampled means", 1, outer = TRUE, line = 1)
# figure title
mtext("Randomisation tests for time scaling methods", 3,
outer = TRUE, cex = 1.5, font = 2, line = 3)
# stop plotting
dev.off()
}
# assemble table of p-values from randomisation tests
# these are number of random samples with great difference in mean + 1 to find
# position of empirical data / 10000 to give p-value
tbl <- lapply(samp, function (run) {
# assemble position
data.frame(Elasmosauridae = (run$elasmo$pos + 1) / 10000,
Elasmosaurinae = (run$elasmo2$pos + 1) / 10000,
Polocotylidae  = (run$poli$pos + 1) / 10000,
Thalassophonea      = (run$thal$pos + 1) / 10000)
}) %>%
do.call(rbind, .)
# replace rownames with relevant test
rownames(tbl) <- c("Tree 1", "Tree 2",
"Tree 3", "Tree 4",
"Tree 5", "Tree 6")
# write table to csv file
write.csv(tbl, file = "randomisation_pval.csv")
{
# plot histograms
cairo_pdf("randomisation_hist.pdf",
width  = 20,
height = 28) #original 14
# set up plot area
par(mfrow = c(6, 3),   #original 6, 3
mar   = c(2, 1, 1, 2),
oma   = c(4, 4, 5, 2))
# begin plotting
for (run in samp) {
# Elasmosauridae
hist(run$elasmo$rand, xlim = range(c(run$elasmo$rand, run$elasmo$emp)),
main = NULL)
abline(v = run$elasmo$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosauridae", 3, line = 1, font = 2)
# add axis label
mtext("Frequency", 2, line = 3)
# Elasmosaurinae
hist(run$elasmo2$rand, xlim = range(c(run$elasmo2$rand, run$elasmo2$emp)),
main = NULL)
abline(v = run$elasmo2$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosaurinae", 3, line = 1, font = 2)
# Policotylidae
hist(run$poli$rand, xlim = range(c(run$poli$rand, run$poli$emp)),
main = NULL)
abline(v = run$poli$emp, lwd = 2, col = "blue")
# plot column label
if (par()$fig[4] > 0.9) mtext("Policotylidae", 3, line = 1, font = 2)
# Thalassophonea
hist(run$thal$rand, xlim = range(c(run$thal$rand, run$thal$emp)),
main = NULL)
abline(v = run$thal$emp, lwd = 2, col = "green")
# plot column label
if (par()$fig[4] > 0.9) mtext("Thalassophonea", 3, line = 1, font = 2)
# add row label
labels <- c("Tree 1", "Tree 2",
"Tree 3", "Tree 4",
"Tree 5", "Tree 6")
nrun <- 6 - (par()$fig[3] * 6)
mtext(labels[nrun], 4, line = 2, font = 2)
}
# x axis title
mtext("Difference between sampled means", 1, outer = TRUE, line = 1)
# figure title
mtext("Randomisation tests for time scaling methods", 3,
outer = TRUE, cex = 1.5, font = 2, line = 3)
# stop plotting
dev.off()
}
{
# plot histograms
cairo_pdf("randomisation_hist.pdf",
width  = 20,
height = 28) #original 14
# set up plot area
par(mfrow = c(6, 4),   #original 6, 3
mar   = c(2, 1, 1, 2),
oma   = c(4, 4, 5, 2))
# begin plotting
for (run in samp) {
# Elasmosauridae
hist(run$elasmo$rand, xlim = range(c(run$elasmo$rand, run$elasmo$emp)),
main = NULL)
abline(v = run$elasmo$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosauridae", 3, line = 1, font = 2)
# add axis label
mtext("Frequency", 2, line = 3)
# Elasmosaurinae
hist(run$elasmo2$rand, xlim = range(c(run$elasmo2$rand, run$elasmo2$emp)),
main = NULL)
abline(v = run$elasmo2$emp, lwd = 2, col = "red")
# plot column label
if (par()$fig[4] > 0.9) mtext("Elasmosaurinae", 3, line = 1, font = 2)
# Policotylidae
hist(run$poli$rand, xlim = range(c(run$poli$rand, run$poli$emp)),
main = NULL)
abline(v = run$poli$emp, lwd = 2, col = "blue")
# plot column label
if (par()$fig[4] > 0.9) mtext("Policotylidae", 3, line = 1, font = 2)
# Thalassophonea
hist(run$thal$rand, xlim = range(c(run$thal$rand, run$thal$emp)),
main = NULL)
abline(v = run$thal$emp, lwd = 2, col = "green")
# plot column label
if (par()$fig[4] > 0.9) mtext("Thalassophonea", 3, line = 1, font = 2)
# add row label
labels <- c("Tree 1", "Tree 2",
"Tree 3", "Tree 4",
"Tree 5", "Tree 6")
nrun <- 6 - (par()$fig[3] * 6)
mtext(labels[nrun], 4, line = 2, font = 2)
}
# x axis title
mtext("Difference between sampled means", 1, outer = TRUE, line = 1)
# figure title
mtext("Randomisation tests for time scaling methods", 3,
outer = TRUE, cex = 1.5, font = 2, line = 3)
# stop plotting
dev.off()
}
